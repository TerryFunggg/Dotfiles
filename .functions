#!/bin/sh

# search file and open with default editor
# require: fzf
finder()
{
  du -a $1 | awk '{print $2}' | fzf | xargs -r $EDITOR
}

# jump into directory by given keywords & print current directory at the end
j()
{
  cd $(jump cd $1)
  pwd
}

# Search file - Open file
# If directory have .git, the search results will based on git commit files
# It good at whatever which sub-directory you are, the result will included all files of current project.
# else search result by fd command, and it just can recusive search start from current folder
# required fd, peco
op()
{
  {
    git ls-files 2>/dev/null && git ls-tree --full-name --full-tree -r "$(git branch --show-current)" --name-only "$(git rev-parse --show-toplevel)/" | peco | awk -v path="$(git rev-parse --show-toplevel)/" '{print path $1}' | xargs $EDITOR
  } || {
    fd "$1" | peco | xargs $EDITOR
  }
}

# Search code/text
# required ag, peco
sc()
{
  {
    git ls-files 2>/dev/null && git rev-parse --show-toplevel | xargs ag "$1" {} | peco | awk -F : '{print "+"$2" "$1}' | xargs $EDITOR
  } || {
    ag "$1" | peco | awk -F : '{print "+"$2" "$1}' | xargs $EDITOR
  }
}
